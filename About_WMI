Windows Management Instrumentation (WMI) is a technology developed by Microsoft that provides a standardised way to manage and monitor various system resources on Windows-based computers. WMI is a component of the Windows operating system and allows system administrators to gather information about hardware, software, and network configurations, as well as remotely control system functions.

WMI uses a model-driven architecture to represent system resources, which are exposed as managed objects that can be accessed and manipulated using WMI-based tools, scripting languages, or programming languages. WMI provides a uniform interface to access system resources across different versions of Windows, enabling administrators to manage and monitor multiple systems using a common set of tools and techniques.

WMI provides a wide range of functionality, including the ability to retrieve system information, configure system settings, monitor system events, and execute commands and scripts on remote computers. WMI can be accessed using several programming and scripting languages, such as PowerShell, VBScript, and C#.

Overall, WMI is a powerful technology that enables system administrators to manage and monitor Windows-based systems in a standardized and efficient manner.

Combing WMI with PowerShell

PowerShell is a powerful command-line shell and scripting language that can be used to interact with WMI on Windows-based computers. PowerShell provides several cmdlets and modules that enable administrators to query WMI, retrieve information, and perform various management tasks.

Here are some examples of how to use WMI with PowerShell:

Retrieving system information from the local host:

Syntax:

Get-WmiObject -Class Win32_OperatingSystem

Result:

PS C:\Users\yepyepyep> Get-WmiObject -Class Win32_OperatingSystem

SystemDirectory : C:\WINDOWS\system32
Organization    :
BuildNumber     : 22621
RegisteredUser  : yepyepyep@myexploitland.com
SerialNumber    : 00220-007-Redacted-1234M
Version         : 10.0.22621

Querying for specific information on the local host:

Syntax:

Get-WmiObject -Class Win32_Processor | Select-Object Name, Manufacturer, MaxClockSpeed

Result:

PS C:\Users\yepyepyep> Get-WmiObject -Class Win32_Processor | Select-Object Name, Manufacturer, MaxClockSpeed

Name                                      Manufacturer MaxClockSpeed
----                                      ------------ -------------
Intel(R) Core(TM) i5-10300H CPU @ 2.50GHz GenuineIntel          2496



